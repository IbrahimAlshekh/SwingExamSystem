/*
 * This Java source file was generated by the Gradle 'init' task.
 */
package SwingSinavSystem;

import java.io.File;
import java.io.FileWriter;
import java.io.IOException;
import java.text.SimpleDateFormat;
import java.util.ArrayList;
import java.util.Date;
import java.util.Scanner;

public class App {
    public static void main(String[] args) {
       
       // show the login as first frame
       Login login  = new Login();
       
       login.setVisible(true);
        
    }
    
    //read student data from the text file that is in the resource folder
    public static Student getStudent(String username, String password)
    {
        Student result = null;

        ArrayList<Student> students = App.readStudentInformations();
        
        for (Student student : students) {
            
            if(username.equals(student.getUsername()) && password.equals(student.getPassword()))
            {
                result = student;
                break;
            }
            
        }
        
        return result;
    }
    
    public static ArrayList<Student> readStudentInformations()
    {
        ArrayList<Student> students = new ArrayList<>();
        
        ArrayList<String> studentsFileContents = App.fileReader(new App().getClass().getResource("/students_list.txt").getPath());
        
        boolean firsline = true;
        
        for (String line : studentsFileContents) {
            
            if(firsline){
                firsline = false;
                continue;
            }
            
            String[] lineArray = line.split(";");
            
            students.add(new Student(
                Integer.parseInt(lineArray[0]),
                lineArray[1],
                lineArray[2],
                lineArray[3]
            ));
        }
        
        return students;
    }
    
    //read the question data from file
    public static ArrayList<QuestionModel> readQuestions()
    {
        ArrayList<QuestionModel> questions = new ArrayList<>();
        
        ArrayList<String> questionFileContents = App.fileReader(new App().getClass().getResource("/questions_list.txt").getPath());
        
        QuestionModel question = new QuestionModel();
        
        for (String line : questionFileContents) {
            
            if(line.charAt(0) == 'Q'){
                
                question.setId(Integer.parseInt(line.split(":")[0].replace("Q", "")));
            
                question.setText(line.split(":")[1]);
            
            }else if(line.contains("Answer:")){

                question.setCurrectAnswer(line.split(":")[1].trim());
                
                questions.add(question);
                
                question = new  QuestionModel();
                
            }else{
                
                question.addOption(line.split("\\.")[0], line.split("\\.")[1].trim());
                
            }
        }
        
        return questions;
    }
    
    
    // write the exam results
    public static void writeExamResults(ArrayList<QuestionModel> questins, Student student)
    {
        ArrayList<String> results = new ArrayList<>();
        
        
        int degree = 0;
        
        for (QuestionModel question : questins) {
            
            if(question.isCurrect()){
                degree += 10;
            }
        }
        
        String isPassed = degree >= 50 ? "passed" : "not-passed";
        
        SimpleDateFormat sdf = new SimpleDateFormat("yyyy-MM-dd k:m:s");
        
        Date now = new Date();
        
        String examResult = student.getNum() + ";" + student.getName() + ";" + isPassed + ";" + degree + ";" + sdf.format(now); 
        
        results.add(examResult);
        
        // For testing the exam results will saved in the user home directory
        String homeDir = System.getProperty("user.home");
        
        App.fileWriter(
            results,
//            new App().getClass().getResource("/exam_results.txt").getPath(),
            homeDir + "/exam_results.txt",
            true
        );
        
        
    }
    
    
    // read text file as ArrayList of lines
    private static ArrayList<String> fileReader(String filePath) {
        ArrayList<String> results = new ArrayList<>();


        try {
            File file = new File(filePath);

            try (Scanner fileScanner = new Scanner(file)) {
                while (fileScanner.hasNextLine()) {
                    
                    results.add(fileScanner.nextLine());
                }
            }

        } catch (Exception e) {

            System.out.println("The file dose not exists");
        }

        return results;
    }

    // write an ArrayList of strings to file line by line
    private static void fileWriter(ArrayList<String> data, String path, boolean append) {
        try {
            try (FileWriter fileWriter = new FileWriter(path, append)) {
                for (String line : data) {
                    
                    fileWriter.write(line + "\n");
                }
            }

        } catch (IOException e) {

            System.out.println("File could not be write");

        }
    }
}
