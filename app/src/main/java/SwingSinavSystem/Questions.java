/*
 * Click nbfs://nbhost/SystemFileSystem/Templates/Licenses/license-default.txt to change this license
 * Click nbfs://nbhost/SystemFileSystem/Templates/AWTForms/Frame.java to edit this template
 */
package SwingSinavSystem;

import java.awt.Component;
import java.awt.Dimension;
import java.util.ArrayList;
import java.util.Map;
import javax.swing.ButtonGroup;
import javax.swing.JLabel;
import javax.swing.JOptionPane;
import javax.swing.JPanel;
import javax.swing.JRadioButton;
import javax.swing.JTextArea;

/**
 *
 * @author Abir El≈üekaki
 */
public class Questions extends java.awt.Frame {

    private final Student student;
    private final ArrayList<QuestionModel> questions;

    /**
     * Creates new form Questions
     * @param questions
     * @param student
     */
    public Questions(ArrayList<QuestionModel> questions, Student student) {
        
        initComponents();
        
        this.student = student;
        this.questions = questions;
        
        
        /**
         *  set the JLabel Layout to Gridleyout
         * 
         *  and add the question that readed from the file to it.
         * 
         *  each question will added to the file as JLabel that includes folowing components
         * 
         *  1. JLabel: the question id
         *  2. JTextArea: the question text
         *  3. JRadioButton: for each answer option (for example 5 Radio buttons)
         *  4. RadioGroup: the parent Group for radioButtons
         * 
         */
        questionsContainer.setLayout(new java.awt.GridLayout(questions.size(), 1));
        
        for (QuestionModel question : questions) {

            // question container
            javax.swing.JPanel qPanel = new javax.swing.JPanel();
            qPanel.setMaximumSize(new Dimension(700, 200));
            qPanel.setMinimumSize(new Dimension(700, 200));
            qPanel.setPreferredSize(new Dimension(700, 200));

            // panel components
            JLabel questionNumber = new JLabel();
            questionNumber.setText(String.valueOf(question.getId()) + ": ");
            qPanel.add(questionNumber);
            
            JTextArea questionText = new JTextArea();
            questionText.setText(question.getText());
            questionText.setEditable(false);
            questionText.setRows(3);
            questionText.setLineWrap(true);
            questionText.setAlignmentY(BOTTOM_ALIGNMENT);
            questionText.setMaximumSize(new java.awt.Dimension(700, 32));
            questionText.setMinimumSize(new java.awt.Dimension(700, 32));
            questionText.setPreferredSize(new java.awt.Dimension(700, 32));
            qPanel.add(questionText);
            
            // add radio buttons for each question option
            ButtonGroup questionGroup = new ButtonGroup();
            for (Map.Entry<String, String> entry : question.getOptions().entrySet()) {
                Object key = (String) entry.getKey();
                Object val = (String) entry.getValue();
                
                JRadioButton rb = new javax.swing.JRadioButton();

                questionGroup.add(rb);
                rb.setFont(new java.awt.Font("Helvetica Neue", 0, 14)); // NOI18N
                rb.setText(key+ ". " + val);
                rb.setMaximumSize(new Dimension(700, 25));
                rb.setMinimumSize(new Dimension(700, 25));
                rb.setPreferredSize(new Dimension(700, 25));

                qPanel.add(rb);

            }
            
            this.questionsContainer.add(qPanel);
        }
    }
    
    private void setQuestionAnswer(int id, String answer)
    {
        for (int i = 0; i < this.questions.size(); i++) {
            
            if(id == this.questions.get(i).getId()){
                
                this.questions.get(i).setAnswer(answer);
                break;
            }
        }
    }

    /**
     * This method is called from within the constructor to initialize the form.
     * WARNING: Do NOT modify this code. The content of this method is always
     * regenerated by the Form Editor.
     */
    // <editor-fold defaultstate="collapsed" desc="Generated Code">//GEN-BEGIN:initComponents
    private void initComponents() {

        jLabel1 = new javax.swing.JLabel();
        jScrollPane1 = new javax.swing.JScrollPane();
        questionsContainer = new javax.swing.JPanel();
        submitAnswers = new javax.swing.JButton();

        setMaximumSize(new java.awt.Dimension(800, 600));
        setMinimumSize(new java.awt.Dimension(800, 600));
        setPreferredSize(new java.awt.Dimension(800, 600));
        addWindowListener(new java.awt.event.WindowAdapter() {
            public void windowClosing(java.awt.event.WindowEvent evt) {
                exitForm(evt);
            }
        });
        setLayout(new java.awt.FlowLayout());

        jLabel1.setFont(new java.awt.Font("Helvetica Neue", 0, 24)); // NOI18N
        jLabel1.setHorizontalAlignment(javax.swing.SwingConstants.CENTER);
        jLabel1.setText("Questions");
        jLabel1.setMaximumSize(new java.awt.Dimension(800, 29));
        jLabel1.setMinimumSize(new java.awt.Dimension(800, 29));
        jLabel1.setPreferredSize(new java.awt.Dimension(800, 29));
        add(jLabel1);

        jScrollPane1.setBackground(new java.awt.Color(204, 204, 255));
        jScrollPane1.setBorder(null);
        jScrollPane1.setToolTipText("");
        jScrollPane1.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        jScrollPane1.setMaximumSize(new java.awt.Dimension(800, 32767));
        jScrollPane1.setMinimumSize(new java.awt.Dimension(800, 500));
        jScrollPane1.setPreferredSize(new java.awt.Dimension(800, 500));

        questionsContainer.setCursor(new java.awt.Cursor(java.awt.Cursor.DEFAULT_CURSOR));
        questionsContainer.setLocation(new java.awt.Point(800, 500));
        questionsContainer.setMaximumSize(new java.awt.Dimension(800, 32000));
        questionsContainer.setMinimumSize(new java.awt.Dimension(800, 500));
        questionsContainer.setRequestFocusEnabled(false);
        questionsContainer.setLayout(new java.awt.GridLayout(50, 1, 50, 30));
        jScrollPane1.setViewportView(questionsContainer);

        add(jScrollPane1);

        submitAnswers.setText("Submit");
        submitAnswers.setMaximumSize(new java.awt.Dimension(500, 30));
        submitAnswers.setMinimumSize(new java.awt.Dimension(500, 30));
        submitAnswers.setPreferredSize(new java.awt.Dimension(500, 30));
        submitAnswers.addActionListener(new java.awt.event.ActionListener() {
            public void actionPerformed(java.awt.event.ActionEvent evt) {
                submitAnswersActionPerformed(evt);
            }
        });
        add(submitAnswers);

        setSize(new java.awt.Dimension(800, 628));
        setLocationRelativeTo(null);
    }// </editor-fold>//GEN-END:initComponents

    /**
     * Exit the Application
     */
    private void exitForm(java.awt.event.WindowEvent evt) {//GEN-FIRST:event_exitForm
        System.exit(0);
    }//GEN-LAST:event_exitForm

    private void submitAnswersActionPerformed(java.awt.event.ActionEvent evt) {//GEN-FIRST:event_submitAnswersActionPerformed

        // check if all question answerd
        if(checkIfAllSelected()){
            
            // set questions answers
            collectAnswers();
            
            //write results
            App.writeExamResults(this.questions, this.student);
            
            JOptionPane.showMessageDialog(this, "You habe done the exam successfuly", "thank you", JOptionPane.INFORMATION_MESSAGE);
            
            
            // back to login
            Login login = new Login();
            
            this.dispose();
            
            login.setVisible(true);
            
        }
    }//GEN-LAST:event_submitAnswersActionPerformed

    
    private void collectAnswers()
    {
        for (Component component : this.questionsContainer.getComponents()) {

            JPanel panel = (JPanel) component;

            JLabel questionIdText = (JLabel) panel.getComponents()[0];

            int questionId = Integer.valueOf(questionIdText.getText().replace(":", "").trim());

            for (Component pCom :panel.getComponents()) {

                if(pCom.getClass() == JRadioButton.class){

                    JRadioButton radioButton = (JRadioButton) pCom;

                    if(radioButton.isSelected()){

                        String answer = radioButton.getText().split("\\.")[0].trim();

                        this.setQuestionAnswer(questionId, answer);

                        break;

                    }
                }
            }
        }
    }
    
    
    private boolean checkIfAllSelected()
    {
        for (Component component : this.questionsContainer.getComponents()) {
            
            JPanel panel = (JPanel) component;

            JLabel questionIdText = (JLabel) panel.getComponents()[0];
            
            boolean answerd = false;
            
            for (Component pCom :panel.getComponents()) {
                
                if(pCom.getClass() == JRadioButton.class){
                    
                    JRadioButton radioButton = (JRadioButton) pCom;
                   
                    if(radioButton.isSelected() == true){
                        answerd = true;
                        break;
                    }
                }
           }
            
            if(!answerd){
                
                JOptionPane.showMessageDialog(this, "Please answer the question " + questionIdText.getText().replace(":", "").trim() + ", it is not answerd yet", "All questions are required", JOptionPane.ERROR_MESSAGE);
                
                return false;
            }
            
        }
        
        return true;
    }
    
    /**
     * @param args the command line arguments
     */
    public static void main(String args[]) {
        java.awt.EventQueue.invokeLater(() -> {
            new Questions(null, null).setVisible(true);
        });
    }


    // Variables declaration - do not modify//GEN-BEGIN:variables
    private javax.swing.JLabel jLabel1;
    private javax.swing.JScrollPane jScrollPane1;
    private javax.swing.JPanel questionsContainer;
    private javax.swing.JButton submitAnswers;
    // End of variables declaration//GEN-END:variables
}
